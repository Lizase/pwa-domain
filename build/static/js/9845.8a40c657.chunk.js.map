{"version":3,"file":"static/js/9845.8a40c657.chunk.js","mappings":"iNAoBA,MAsFA,EAtF4BA,KAC1B,MAAMC,GAAuBC,EAAAA,EAAAA,MAEvBC,IADYC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,MAAMC,aACtCH,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,MAAME,iBAClE,EAAEC,IAAMC,EAAAA,EAAAA,OACPC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAkB,IAC7CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAmB,KAmB7DG,EAAAA,EAAAA,YAAU,KACRf,GAASgB,EAAAA,EAAAA,IAAgBH,GAAe,GACvC,CAACX,EAAmBW,IAsBvB,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KACRD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,UAAQK,QAxBSC,KACrBZ,GAAcD,GACdI,EAAiB,IACjBd,GAASgB,EAAAA,EAAAA,IAAgBH,GAAe,EAqBHK,UAAU,UAASC,SAAA,EAClDC,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CAACC,KAAMf,EAAYgB,EAAAA,IAAUC,EAAAA,OAC7CP,EAAAA,EAAAA,KAAA,QAAAD,SAAmBX,EAAZE,EAAc,eAAU,uBAclCA,IACCO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8FAA6FC,SAAA,EAC1GF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACGX,EAAE,gBAAM,KAAGK,EAAce,OAAO,QAEnCR,EAAAA,EAAAA,KAAA,UACEE,QAhCkBO,KAC1BC,QAAQC,IAAI,2BAA4BlB,GACxCC,EAAiB,IACjBH,GAAa,EAAM,EA8BXO,UAAU,+CAA8CC,SAEvDX,EAAE,uBAIL,C","sources":["pages/Member/MyItems/Downloads/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../../store\";\nimport { RootState } from \"../../../../store\";\n\nimport BackBar from \"../../../../components/BackBar\";\nimport VideoMap from \"../../../../components/Video/VideoMap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { setDwSelectList } from \"../../../../store/videoSlice\";\nimport { use } from \"video.js/dist/types/tech/middleware\";\n\ninterface VideoItem {\n  id: number;\n  name: string;\n  imageUrl: string;\n  duration: string;\n}\n\nconst Downloads: React.FC = () => {\n  const dispatch:AppDispatch = useDispatch();\n  const videoList = useSelector((state: RootState) => state.video.videoList);\n  const videoDwSelectLsit = useSelector((state: RootState) => state.video.dwSelectList);\n  const { t } = useTranslation();\n  const [isEditing, setIsEditing] = useState<boolean>(false); // Editing state\n  const [selectedItems, setSelectedItems] = useState<string[]>([]); // Selected video items\n\n  function generateRandomDuration(): string {\n    const totalSeconds = Math.floor(Math.random() * 3600) + 1;\n    const hours = Math.floor(totalSeconds / 3600).toString().padStart(2, \"0\");\n    const minutes = Math.floor((totalSeconds % 3600) / 60).toString().padStart(2, \"0\");\n    const seconds = (totalSeconds % 60).toString().padStart(2, \"0\");\n    return `${hours}:${minutes}:${seconds}`;\n  }\n/*\n  const data: VideoItem[] = Array.from({ length: 15 }, (_, index) => {\n    return {\n      id: index + 1,\n      name: `影片${index + 1}`,\n      imageUrl: `https://picsum.photos/480/270?random=${index + 1}`,\n      duration: generateRandomDuration(),\n    };\n  });\n*/\n  useEffect(() => {\n    dispatch(setDwSelectList(selectedItems));\n  }, [videoDwSelectLsit, selectedItems])\n\n  const toggleEditMode = (): void => {\n    setIsEditing(!isEditing);\n    setSelectedItems([]); // Clear selected items when toggling edit mode\n    dispatch(setDwSelectList(selectedItems));\n  };\n\n  const toggleSelectItem = (id: string): void => {\n    setSelectedItems((prevSelected) =>\n      prevSelected.includes(id)\n        ? prevSelected.filter((itemId) => itemId !== id)\n        : [...prevSelected, id]\n    );\n  };\n\n  const deleteSelectedItems = (): void => {\n    console.log(\"Deleting selected items:\", selectedItems);\n    setSelectedItems([]); // Clear selection after deletion\n    setIsEditing(false); // Exit edit mode\n  };\n\n  return (\n    <div className=\"relative\">\n      <BackBar />\n      <div className=\"flex justify-end p-4\">\n        <button onClick={toggleEditMode} className=\"ml-auto\">\n          <FontAwesomeIcon icon={isEditing ? faTimes : faEdit} />\n          <span>{isEditing ? t(\"取消\") : t(\"編輯\")}</span>\n        </button>\n      </div>\n\n      {/* VideoMap Component\n      <VideoMap\n        isLinkEnabled={!isEditing}\n        toggleSelectItem={toggleSelectItem}\n        data={videoList?.guessYouLike.products}\n        selectItems={videoDwSelectLsit}\n      />\n      */}\n\n      {/* Bottom Delete Button */}\n      {isEditing && (\n        <div className=\"fixed bottom-0 left-0 w-full bg-background p-4 text-white flex justify-between items-center\">\n          <span>\n            {t(\"刪除\")} ({selectedItems.length})\n          </span>\n          <button\n            onClick={deleteSelectedItems}\n            className=\"bg-red-500 px-4 py-2 rounded-full text-white\"\n          >\n            {t(\"刪除\")}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Downloads;\n"],"names":["Downloads","dispatch","useDispatch","videoDwSelectLsit","useSelector","state","video","videoList","dwSelectList","t","useTranslation","isEditing","setIsEditing","useState","selectedItems","setSelectedItems","useEffect","setDwSelectList","_jsxs","className","children","_jsx","BackBar","onClick","toggleEditMode","FontAwesomeIcon","icon","faTimes","faEdit","length","deleteSelectedItems","console","log"],"sourceRoot":""}