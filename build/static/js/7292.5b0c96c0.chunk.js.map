{"version":3,"file":"static/js/7292.5b0c96c0.chunk.js","mappings":"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","sources":["components/BasicTabs/TabsHeader/index.tsx","components/BasicTabs/TabPanel/index.tsx","components/BasicTabs/TabsContent/index.tsx","components/BasicTabs/index.tsx","components/CustomToast/index.tsx","components/TextInput/index.tsx","pages/Member/MyItems/MyCoupon/TabContent.tsx","pages/Member/MyItems/MyCoupon/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { colors } from \"../../../styles/colors\";\nimport { getFontClass } from \"../../../utils/helper\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store\";\n\ninterface TabsHeaderProps {\n  tabs: { key: string; label: string; content: React.ReactNode }[];\n  value: number;\n  handleChange: (event: React.SyntheticEvent, newValue: number) => void;\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TabsHeader: React.FC<TabsHeaderProps> = ({ tabs, value, handleChange }) => {\n  const language = useSelector((state: RootState) => state.init.language);\n  return (\n    <Tabs\n      value={value}\n      onChange={handleChange}\n      aria-label=\"basic tabs example\"\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      TabIndicatorProps={{\n        style: {\n          backgroundColor: colors.secondary,\n        },\n      }}\n      sx={{\n        \"& .MuiTab-root.Mui-selected\": {\n          color: tabs[value].key === \"獨家\" ? \"#02ff00\" : \"white\",\n        },\n        \"& .MuiTabs-indicator\": {\n          display: \"flex\",\n          justifyContent: \"center\",\n          backgroundColor: \"transparent\",\n          \"& > div\": {\n            width: \"100%\",\n            backgroundColor: \"#e8443d\",\n          },\n        },\n      }}\n    >\n      {tabs?.map((tab, index) => (\n        <Tab  label={tab.label} key={index} {...a11yProps(index)} \n          sx={{\n            color: tab.key === \"獨家\" ? \"#02ff00\" : colors.primary.inactive,\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            minWidth: \"auto\",\n            width: \"auto\",\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            marginRight: 4,\n          }}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabsHeader;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n};\n\nexport default React.memo(TabPanel);\n","import * as React from \"react\";\nimport TabPanel from \"../TabPanel\";\n\ninterface TabsContentProps {\n  tabs: { key: string; label: string; content: React.ReactNode }[];\n  value: number;\n}\n\nconst TabsContent: React.FC<TabsContentProps> = ({ tabs, value }) => {\n  return (\n    <>\n      {tabs?.map((tab, index) => (\n        <TabPanel value={value} index={index} key={index}>\n          {tab.content}\n        </TabPanel>\n      ))}\n    </>\n  );\n};\n\nexport default TabsContent;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TabsHeader from \"./TabsHeader\";\nimport TabsContent from \"./TabsContent\";\n\ninterface SharedTabsProps {\n  tabs: { key: string; label: string; content: React.ReactNode | null }[];\n  initialValue?: number;\n  className?: string;\n  setTabIndex?: (index:number) => void;\n}\n\nexport default function BasicTabs({ tabs, initialValue = 0, setTabIndex}: SharedTabsProps) {\n  const [value, setValue] = React.useState(initialValue);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n    if (setTabIndex) {\n      setTabIndex(newValue);\n    }\n  };\n\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue])\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\", paddingX: 2 }}>\n        <TabsHeader tabs={tabs} value={value} handleChange={handleChange}  />\n      </Box>\n      <TabsContent tabs={tabs} value={value} />\n    </Box>\n  );\n}\n","// src/components/CustomToast.tsx\nimport React from \"react\";\nimport { toast, ToastOptions } from \"react-hot-toast\";\n\ninterface CustomToastProps {\n  message: string;\n  type: \"success\" | \"error\" | \"loading\";\n}\n\nconst toastStyles: { [key: string]: React.CSSProperties } = {\n  success: {\n    backgroundColor: \"#f44336\", // Green background\n    color: \"#fff\",\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    marginTop: '50%'\n  },\n  error: {\n    backgroundColor: \"#f44336\", // Red background\n    color: \"#fff\",\n  },\n  loading: {\n    backgroundColor: \"#333\", // Dark background\n    color: \"#fff\",\n  },\n};\n\nexport const showCustomToast = (message: string, type: \"success\" | \"error\" | \"loading\") => {\n  return toast(message, {\n    style: toastStyles[type],\n    duration: type === \"loading\" ? undefined : 4000, // Keep loading toast until dismissed\n    position: \"top-center\",\n  });\n};","import React from \"react\";\nimport { Input } from \"@mui/base/Input\";\n\ninterface TextInputProps {\n  value: string;\n  onInputChange: (value: any) => void;\n  placeholder?: string;\n  type?: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  rows?: number;\n  accept?: string;\n  autocomplete?: string;\n  hidden?: boolean;\n  authCode?: boolean;\n  rightIcon?: React.ReactNode; // 接受 rightIcon 作為一個可選的 React 元素\n  className?: string;\n}\n\nconst TextInput: React.FC<TextInputProps> = (props) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    if (props.type === \"file\") {\n      props.onInputChange((event.target as HTMLInputElement).files?.[0]);\n    } else {\n      props.onInputChange(event.target.value);\n    }\n  };\n  //w-full text-sm leading-5 px-3 py-2 rounded focus:shadow-lg border border-[#555555] bg-white text-black focus-visible:outline-0 min-h-10 ${props.className}\n  const commonProps = {\n    className:\n      `w-full text-sm px-3  min-h-10 text-black rounded border-2 border-[#555555] focus-visible:outline-0 ${props.className}`,\n    disabled: props.disabled,\n    value: props.value,\n    onChange: handleChange,\n    placeholder: props.placeholder,\n    autoComplete: props.autocomplete || \"off\",\n    hidden: props.hidden,\n    style: props.authCode\n      ? { borderTopRightRadius: 0, borderBottomRightRadius: 0 }\n      : undefined,\n  };\n\n  return (\n    <div className=\"relative flex items-center\">\n      {props.multiline ? (\n        <textarea {...commonProps} rows={props.rows || 1} />\n      ) : (\n        <input {...commonProps} type={props.type || \"text\"} accept={props.accept} />\n      )}\n      {props.rightIcon && (\n        <div className=\"absolute right-2\">\n          {props.rightIcon}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { useEffect, useState } from \"react\";\nimport { Divider } from \"@mui/material\";\nimport { colors } from \"../../../../styles/colors\";\nimport BasicTabs from \"../../../../components/BasicTabs\";\nimport { useTranslation } from \"react-i18next\";\nimport { AppDispatch, RootState } from \"../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Coupon, CouponsList } from \"../../../../type/rechargeType\";\nimport { fetchMyCouponsList, fetchRecharge, setClCouponNum } from \"../../../../store/rechargeSlice\";\nimport { showCustomToast } from \"../../../../components/CustomToast\";\nimport Modal from \"../../../../components/Modal\";\nimport Button from \"../../../../components/Button\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst couponImageSrc = require(\"./coupon.png\");\n\n// 定義優惠券資料的型別\ninterface CouponData {\n  content?: string;\n  title: string;\n  available: boolean;\n  dueDate: string;\n}\n\n// 定義 BasicTabs 的 tab 結構\ninterface TabItem {\n  key: string;\n  label: string;\n  content: React.ReactNode;\n}\n\ninterface itemProps {\n  index: number;\n  handleCouponOpen: () => void;\n  setSelectedCoupons: (coupon: Coupon) => void;\n  setCurrentIndex:(index: number) => void;\n  currentIndex: number;\n  data: Coupon;\n\n}\n\nconst Item: React.FC<itemProps> = ({ index, handleCouponOpen, setCurrentIndex, setSelectedCoupons, data }) => {\n  const { t } = useTranslation();\n  const dispatch:AppDispatch = useDispatch();\n  \n  return (\n    <div className=\"rounded bg-background mb-4 flex flex-row items-stretch h-[8rem]\">\n      <img src={couponImageSrc} alt={t(\"Coupon\")} className=\"m-4 w-20 h-20\" />\n      <div className=\"flex flex-col my-4 flex-1 justify-center\">\n        {data.ct_img_template !== \"\" && (\n          <img src={`https://iqqapp2.com/${data.ct_img_template}`}/>\n        )}\n        <span className=\"font-bold text-secondary\">{data.ct_name}</span>\n        {data.ct_description && <span className=\"text-xs\">{data.ct_description}</span>}\n        <span className=\"text-xs mt-auto\">\n          {data.cl_eff_date_end ? `${t(\"有效至\")}${data.cl_eff_date_end.split(\" \")[0]}` : t(\"永久\")}\n        </span>\n      </div>\n      <div style={{ marginLeft: \"15px\", borderLeft: \"2px dashed #3C3C3C\", height: \"7.5rem\"}}></div>\n      <div className=\"flex flex-col m-4 justify-center\">\n        <span\n          className={`font-bold text-secondary`}\n          onClick={\n            () => {\n              handleCouponOpen();\n              setSelectedCoupons(data);\n              setCurrentIndex(index);\n            }\n          }\n        >\n          {t(\"立即使用\")}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst ItemList: React.FC<{ data: CouponsList | null }> = ({ data }) => {\n  const { t } = useTranslation();\n  const dispatch:AppDispatch = useDispatch();\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [couponIsOpen, setCouponIsOpen] = useState(false);\n  const handleCouponOpen = () => setCouponIsOpen(true);\n  const handleCouponClose = () => setCouponIsOpen(false);\n  const userid = useSelector((state: RootState) => state.userInfo.userInfoData?.data.user_id);\n  const [selectedCoupons, setSelectedCoupons] = useState<Coupon | null>(null);\n  const navigate = useNavigate();\n  const handleConfirm = () => {\n    \n    if (typeof selectedCoupons === \"object\" && selectedCoupons !== null && Object.keys(selectedCoupons).length !== 0) {\n      //dispatch(fetchRecharge({cl_coupon_num: selectedCoupons.cl_coupon_num, user_id: userid}));\n      dispatch(setClCouponNum(selectedCoupons.cl_coupon_num));\n      setCouponIsOpen(false);\n      showCustomToast(t(\"使用成功！\"), \"success\");\n      dispatch(fetchMyCouponsList({\n        user_id: userid,\n        caseInfo: \"\"\n      }));\n      navigate(\"/app/Recharge\");\n    }\n  }\n  \n\n  if (typeof data === \"object\" && data === null) {\n    return (\n      <div className=\"p-4 flex flex-col items-center\">\n        <img src={couponImageSrc} alt={t(\"Coupon\")} className=\"m-4 w-20 h-20\" />\n        <span>{t(\"目前尚無回饋券\")}</span>\n        <span>{t(\"請在上方輸入有效的優惠券代碼\")}</span>\n      </div>\n    );\n  }\n  return (\n    <div className=\"p-4\">\n      {data && typeof data === \"object\" && Object.keys(data).length !== 0 ? (\n        Object.values(data).map((item: Coupon, index: number) => (\n          <Item \n            key={index} \n            index={index} \n            handleCouponOpen={handleCouponOpen} \n            setSelectedCoupons={setSelectedCoupons}\n            setCurrentIndex={setCurrentIndex} \n            currentIndex={currentIndex}\n            data={item} \n          />\n        ))\n      ) : (\n        <div className=\"flex flex-col items-center pt-5 pb-[10rem]\">\n          <img src={require(`../../../../images/Coupon.png`)} className=\"text-red-500 w-50 h-50 mb-2\" />\n          <span className=\"text-white text-center\">{t(\"目前尚無回饋券\")}</span>\n          <span className=\"text-white text-center\">{t(\"請在上方輸入有效的優惠券代碼\")}</span>\n        </div>\n      )}\n      <Modal\n          title={t(\"優惠券兌換\")}\n          open={couponIsOpen}\n          onClose={handleCouponClose}\n          content={[selectedCoupons?.ct_name,selectedCoupons?.ct_annotate,t(\"是否兌換?\")]}\n          buttons={\n            [\n              <Button\n                className=\"button-full active mt-1 w-1/3\"\n                type=\"button\"\n                onClick={handleConfirm}\n              >\n                {t(\"確認\")}\n              </Button>,\n              <Button\n                className=\"button-full active mt-1 w-1/3\"\n                type=\"button\"\n                onClick={handleCouponClose}\n              >\n                {t(\"取消\")}\n              </Button>,\n            ]\n          }\n      />\n    </div>\n  );\n};\n\nconst TabContent: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch:AppDispatch = useDispatch();\n  const myCouponsList = useSelector((state: RootState) => state.recharge.myCouponsList);\n  const userid = useSelector((state: RootState) => state.userInfo.userInfoData?.data.user_id);\n  const [couponIsOpen, setCouponIsOpen] = useState(false);\n  const [selectedCoupons, setSelectedCoupons] = useState<Coupon | null>(null);\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [isLoginRemindModalOpen, setIsLoginRemindModalOpen] = useState(false);\n  const handleCouponOpen = () => setCouponIsOpen(true);\n  const handleCouponClose = () => setCouponIsOpen(false);\n\n  useEffect(() => {\n    dispatch(fetchMyCouponsList({\n      user_id: userid,\n      caseInfo: \"\"\n    }));\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log(\"myCouponsList: \", myCouponsList);\n  }, [myCouponsList]);\n\n  const tabContent: TabItem[] = [\n    {\n      key: \"優惠特區\",\n      label: t(\"優惠特區\"),\n      content: <ItemList data={myCouponsList} />,\n    },\n  ];\n\n  return <BasicTabs tabs={tabContent} />;\n};\n\nexport default TabContent;\n","import React, { useState } from \"react\";\nimport BackBar from \"../../../../components/BackBar\";\nimport TabContent from \"./TabContent\";\nimport TextInput from \"../../../../components/TextInput\";\nimport Button from \"../../../../components/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../../../store\";\nimport { fetchCoupon, fetchMyCouponsList } from \"../../../../store/rechargeSlice\";\nimport { showCustomToast } from \"../../../../components/CustomToast\";\nimport { Modal } from \"react-bootstrap\";\n\nconst MyCoupon: React.FC = () => {\n  const { t } = useTranslation();\n  const userid = useSelector((state: RootState) => state.userInfo.userInfoData?.data.user_id);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [isLoginRemindModalOpen, setIsLoginRemindModalOpen] = useState(false);\n  const dispatch:AppDispatch = useDispatch();\n\n  const handleInputChange = (newValue: string) => {\n    setInputValue(newValue);\n  };\n\n  const handleSubmit = () => {\n    if (userid) {\n      dispatch(fetchCoupon({\n        jsonp: 1,\n        act: \"convert\",\n        coupons_num: inputValue,\n      })).then((result: any) => {\n        if (result.payload.code !== 0) {\n          alert(result.payload.msg);\n        } else {\n          dispatch(fetchMyCouponsList({\n            user_id: userid,\n            caseInfo: \"\"\n          }));\n          showCustomToast(t(\"兌換成功！\"), \"success\");\n        }\n      });\n    } else {\n      setIsLoginRemindModalOpen(true);\n    }\n  };\n\n  return (\n    <div>\n      <BackBar />\n      <div className=\"p-4\">\n        <TextInput\n          placeholder={t(\"請輸入優惠券代碼\")}\n          value={inputValue}\n          onInputChange={handleInputChange}\n        />\n        <Button className=\"button-full active mt-2\" onClick={handleSubmit}>\n          {t(\"確定\")}\n        </Button>\n      </div>\n      <TabContent />\n      <Modal\n        open={isLoginRemindModalOpen}\n        content={[<div>{t(\"請先登入\")}</div>]}\n        onClose={() => setIsLoginRemindModalOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default MyCoupon;\n"],"names":["a11yProps","index","id","_ref","tabs","value","handleChange","useSelector","state","init","language","_jsx","Tabs","onChange","variant","scrollButtons","TabIndicatorProps","style","backgroundColor","colors","secondary","sx","color","key","display","justifyContent","width","children","map","tab","Tab","label","primary","inactive","fontSize","fontWeight","minWidth","paddingLeft","paddingRight","paddingBottom","marginRight","TabPanel","other","role","hidden","Box","React","_Fragment","content","BasicTabs","initialValue","setTabIndex","setValue","_jsxs","borderBottom","borderColor","paddingX","TabsHeader","event","newValue","TabsContent","toastStyles","success","marginTop","error","loading","showCustomToast","message","type","toast","duration","undefined","position","props","commonProps","className","disabled","_files","onInputChange","target","files","placeholder","autoComplete","autocomplete","authCode","borderTopRightRadius","borderBottomRightRadius","multiline","rows","accept","rightIcon","couponImageSrc","require","Item","handleCouponOpen","setCurrentIndex","setSelectedCoupons","data","t","useTranslation","useDispatch","src","alt","ct_img_template","ct_name","ct_description","cl_eff_date_end","split","marginLeft","borderLeft","height","onClick","ItemList","_ref2","dispatch","currentIndex","useState","couponIsOpen","setCouponIsOpen","handleCouponClose","userid","_state$userInfo$userI","userInfo","userInfoData","user_id","selectedCoupons","navigate","useNavigate","Object","keys","length","values","item","Modal","title","open","onClose","ct_annotate","buttons","Button","handleConfirm","setClCouponNum","cl_coupon_num","fetchMyCouponsList","caseInfo","TabContent","myCouponsList","recharge","_state$userInfo$userI2","couponCode","setCouponCode","isLoginRemindModalOpen","setIsLoginRemindModalOpen","useEffect","console","log","tabContent","MyCoupon","inputValue","setInputValue","BackBar","TextInput","handleSubmit","fetchCoupon","jsonp","act","coupons_num","then","result","payload","code","alert","msg"],"sourceRoot":""}