{"version":3,"file":"static/js/7399.e0acec80.chunk.js","mappings":"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","sources":["components/CustomToast/index.tsx","pages/Member/MyItems/MemberInfo/EditInfo/index.tsx","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/styled.js"],"sourcesContent":["// src/components/CustomToast.tsx\nimport React from \"react\";\nimport { toast, ToastOptions } from \"react-hot-toast\";\n\ninterface CustomToastProps {\n  message: string;\n  type: \"success\" | \"error\" | \"loading\";\n}\n\nconst toastStyles: { [key: string]: React.CSSProperties } = {\n  success: {\n    backgroundColor: \"#f44336\", // Green background\n    color: \"#fff\",\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    marginTop: '50%'\n  },\n  error: {\n    backgroundColor: \"#f44336\", // Red background\n    color: \"#fff\",\n  },\n  loading: {\n    backgroundColor: \"#333\", // Dark background\n    color: \"#fff\",\n  },\n};\n\nexport const showCustomToast = (message: string, type: \"success\" | \"error\" | \"loading\") => {\n  return toast(message, {\n    style: toastStyles[type],\n    duration: type === \"loading\" ? undefined : 4000, // Keep loading toast until dismissed\n    position: \"top-center\",\n  });\n};","import React, { useState, ChangeEvent, FormEvent } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport BackBar from \"../../../../../components/BackBar\";\nimport Button from \"../../../../../components/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useTranslation } from \"react-i18next\";\nimport TextField from \"@mui/material/TextField\";\nimport { styled } from \"@mui/system\";\nimport { AppDispatch, RootState } from \"../../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetUserInfo } from \"../../../../../store/userInfoSlice\";\nimport { showCustomToast } from \"../../../../../components/CustomToast\";\nimport { NormalResponse } from \"../../../../../type/userType\";\nimport { getFontClass } from \"../../../../../utils/helper\";\n\ninterface PasswordValues {\n  oldPassword: string;\n  newPassword: string;\n  confirmPassword: string;\n}\n\ninterface LocationState {\n  value?: string;\n  type?: string;\n  title?: string;\n}\n\nconst CustomTextField = styled(TextField)({\n  \"& .MuiInputBase-input\": {\n    padding: \"6px\",\n  },\n  \"&.MuiFormControl-root\": {\n    width: \"100%\",\n    backgroundColor: \"#f5f5f5\",\n    borderRadius: \"4px\",\n  },\n});\n\nconst EditInfo: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    value = \"\",\n    type = \"\",\n    title = \"\",\n  } = (location.state || {}) as LocationState;\n\n  const userInfo = useSelector(\n    (state: RootState) => state.userInfo.userInfoData?.data\n  );\n  const language = useSelector(\n    (state: RootState) => state.init.language\n  );\n\n  const [buttonDisable, setButtonDisable] = useState<boolean>(false);\n  const [inputValue, setInputValue] = useState<string>(value);\n  const [passwordValue, setPasswordValue] = useState<PasswordValues>({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n  const [showPassword, setShowPassword] = useState({\n    oldPassword: false,\n    newPassword: false,\n    confirmPassword: false,\n  });\n\n  const handleSubmit = (action: string) => {\n    //e.preventDefault();\n    let config = {};\n    switch (type) {\n      case \"email\":\n        setButtonDisable(true);\n        console.log(`Email:`, inputValue);\n        config = {};\n        if (action === \"verify\") {\n          config = { smail: inputValue };\n        } else if (action === \"modify\") {\n          config = { nmail: inputValue };\n        }\n\n        dispatch(resetUserInfo(config))\n          .then((response) => {\n            const payload = response.payload as NormalResponse;\n            showCustomToast(payload.data, \"error\");\n            setButtonDisable(false);\n          })\n          .catch((error) => {\n            //showCustomToast(error, 'error')\n          });\n\n        break;\n      case \"phoneNumber\":\n        console.log(`New Phone Number:`, inputValue);\n        break;\n      case \"password\":\n        console.log(`Password Change:`, passwordValue);\n        setButtonDisable(true);\n        config = {};\n        config = {\n          opasw: passwordValue.oldPassword,\n          npasw: passwordValue.newPassword,\n          rnpasw: passwordValue.confirmPassword,\n        };\n        dispatch(resetUserInfo(config))\n          .then((response) => {\n            const payload = response.payload as NormalResponse;\n            showCustomToast(payload.data, \"error\");\n            setButtonDisable(false);\n          })\n          .catch((error) => {\n            //showCustomToast(error, 'error')\n          });\n        break;\n      default:\n        break;\n    }\n    //navigate(-1);\n  };\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handlePasswordChange =\n    (field: keyof PasswordValues) => (e: ChangeEvent<HTMLInputElement>) => {\n      setPasswordValue({ ...passwordValue, [field]: e.target.value });\n    };\n\n  const togglePasswordVisibility = (field: keyof PasswordValues) => () => {\n    setShowPassword((prev) => ({ ...prev, [field]: !prev[field] }));\n  };\n\n  const renderInputFields = () => {\n    if (type === \"email\" || type === \"phoneNumber\") {\n      return (\n        <form className=\"space-y-4\">\n          <div>\n            <label className={`${getFontClass(`${language}_m`)} block mb-2`}>{t(`輸入新的 {{value}}`, {value: title})}</label>\n            <CustomTextField\n              placeholder={t(`輸入新的 {{value}}`, {value: title})}\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"w-full\"\n            />\n          </div>\n          <div>\n            <Button\n              className=\"button-full active mt-2\"\n              onClick={() => handleSubmit(\"modify\")}\n              disable={buttonDisable}\n            >\n              {t(\"修改信箱\")}\n            </Button>\n            <Button\n              className=\"button-full active mt-4\"\n              onClick={() => handleSubmit(\"verify\")}\n              disable={buttonDisable}\n            >\n              {t(\"馬上驗證\")}\n            </Button>\n          </div>\n        </form>\n      );\n    }\n\n    if (type === \"password\") {\n      return (\n        <form className=\"space-y-4\">\n          <CustomTextField\n            value={userInfo?.username}\n            className=\"w-full\"\n            autoComplete=\"username\"\n            hidden\n          />\n          {([\"oldPassword\", \"newPassword\", \"confirmPassword\"] as const).map(\n            (field) => (\n              <div key={field}>\n                <label className={`${getFontClass(`${language}_m`) } flex mb-2 items-center`}>\n                  {\n                    `${t(\"輸入\")}` +\n                    \" \" +\n                    `${\n                        field === \"oldPassword\"\n                        ? t(\"舊密碼\")\n                        : field === \"newPassword\"\n                          ? t(\"新密碼\")\n                          : t(\"確認新密碼\")\n                      }\n                    `\n                  }\n                  <FontAwesomeIcon\n                    icon={!showPassword[field] ? faEyeSlash : faEye}\n                    className=\"ml-2 cursor-pointer\"\n                    onClick={togglePasswordVisibility(field)}\n                  />\n                </label>\n                <CustomTextField\n                  type={showPassword[field] ? \"text\" : \"password\"}\n                  placeholder={\n                    `${t(\"輸入\")}` +\n                    \" \" +\n                    `${\n                        field === \"oldPassword\"\n                        ? t(\"舊密碼\")\n                        : field === \"newPassword\"\n                          ? t(\"新密碼\")\n                          : t(\"確認新密碼\")\n                      }\n                    `\n                  }\n                  value={passwordValue[field]}\n                  onChange={handlePasswordChange(field)}\n                  className=\"w-full\"\n                  autoComplete={\n                    !showPassword[field]\n                      ? field === \"oldPassword\"\n                        ? \"current-password\"\n                        : \"new-password\"\n                      : undefined\n                  }\n                />\n              </div>\n            )\n          )}\n          <div>\n            <Button\n              className=\"button-full active mt-2\"\n              onClick={() => handleSubmit(\"\")}\n            >\n              {t(\"確認修改\")}\n            </Button>\n          </div>\n        </form>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div>\n      <BackBar />\n      <div className=\"p-4 space-y-4\">{renderInputFields()}</div>\n    </div>\n  );\n};\n\nexport default EditInfo;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;"],"names":["toastStyles","success","backgroundColor","color","paddingLeft","paddingRight","marginTop","error","loading","showCustomToast","message","type","toast","style","duration","undefined","position","CustomTextField","styled","TextField","padding","width","borderRadius","EditInfo","dispatch","useDispatch","t","useTranslation","location","useLocation","value","title","useNavigate","state","userInfo","useSelector","_state$userInfo$userI","userInfoData","data","language","init","buttonDisable","setButtonDisable","useState","inputValue","setInputValue","passwordValue","setPasswordValue","oldPassword","newPassword","confirmPassword","showPassword","setShowPassword","handleSubmit","action","config","console","log","smail","nmail","resetUserInfo","then","response","payload","catch","opasw","npasw","rnpasw","handleInputChange","e","target","handlePasswordChange","field","togglePasswordVisibility","prev","_jsxs","children","_jsx","BackBar","className","getFontClass","placeholder","onChange","Button","onClick","disable","username","autoComplete","hidden","map","FontAwesomeIcon","icon","faEye","faEyeSlash","_excluded","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","createTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","_ref2","defaultTheme","theme","themeId","obj","Object","keys","length","defaultOverridesResolver","slot","props","styles","processStyleArg","callableStyle","_ref","ownerState","_objectWithoutPropertiesLoose","resolvedStylesArg","_extends","Array","isArray","flatMap","resolvedStyle","variants","result","forEach","variant","isMatch","key","push","input","arguments","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","_len","expressions","_key","expressionsWithDefaultTheme","components","styleOverrides","resolvedStyleOverrides","entries","_ref3","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","fill","raw","Component","muiName","withConfig","createStyled"],"sourceRoot":""}