{"version":3,"file":"static/js/218.a81fd62d.chunk.js","mappings":"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","sources":["components/BasicModal/index.tsx","components/CustomToast/index.tsx","pages/Member/MyItems/Setting/index.tsx","../node_modules/@mui/material/ListItemText/ListItemText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { colors } from \"../../styles/colors\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../Button\";\nimport { Option } from \"../../type/common\";\n\ntype BasicModalProps<T> = {\n  options?: Option[] | null;\n  open: boolean;\n  currentState: Option | null;\n  handleClose: () => void;\n  setSelectedOption: (option: Option) => void;\n  title: string;\n  content?: React.ReactNode;\n  onConfirm: (option: Option | null) => void;\n  onCancel: () => void;\n  showButtons?: boolean;\n};\n\nconst modalStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"90%\",\n  bgcolor: colors.background,\n  border: \"2px solid #000\",\n  borderRadius: 2,\n  boxShadow: 24,\n  p: 2,\n  color: colors.primary.active,\n  display: \"flex\",\n  flexDirection: \"column\" as const,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nfunction BasicModal<T extends string | number>({\n  options,\n  open,\n  currentState,\n  handleClose,\n  setSelectedOption,\n  title,\n  content,\n  onConfirm,\n  onCancel,\n  showButtons,\n}: BasicModalProps<T>) {\n  const [selectedOption, setSelectedOptionLocal] = useState<Option | null>(currentState);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    setSelectedOptionLocal(currentState);\n  }, [currentState]);\n\n  const handleOptionSelect = (option: Option) => {\n    setSelectedOptionLocal(option);\n    setSelectedOption(option);\n  };\n\n  return (\n    <Modal\n      sx={{ maxWidth: 480, margin: \"0 auto\" }}\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={modalStyle}>\n        <Box\n          sx={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            position: \"relative\",\n          }}\n        >\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            {t(title)}\n          </Typography>\n          <button\n            className=\"w-5 h-5 flex justify-center items-center absolute right-0 top-0\"\n            onClick={handleClose}\n          >\n            <FontAwesomeIcon icon={faTimes} className=\"text-xl\" />\n          </button>\n        </Box>\n        {content && (\n          <Typography\n            sx={{ mt: 2, fontSize: \"14px\", width: \"100%\" }}\n            id=\"modal-modal-description\"\n          >\n            {content}\n          </Typography>\n        )}\n\n        {options && options.length > 0 && (\n          <List sx={{ width: \"100%\" }}>\n            {options.map((option) => (\n              <ListItem\n                key={option.id}\n                onClick={() => handleOptionSelect(option)}\n                sx={{ justifyContent: \"center\", position: \"relative\" }}\n              >\n                {option.id === selectedOption?.id && (\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className=\"text-xs mr-4 text-transparent\"\n                  />\n                )}\n                <span\n                  className={`text-xs ${\n                    option.id === selectedOption?.id ? \"text-secondary\" : \"\"\n                  }`}\n                >\n                  {option.name}\n                </span>\n                {option.id === selectedOption?.id && (\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={`text-xs ml-4 ${\n                      option.id === selectedOption?.id ? \"text-secondary\" : \"\"\n                    }`}\n                  />\n                )}\n              </ListItem>\n            ))}\n          </List>\n        )}\n        {showButtons && (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              mt: 3,\n            }}\n          >\n            <Button\n              className=\"button-shorted mr-5 inactive\"\n              //variant=\"outlined\"\n              onClick={onCancel}\n            >\n              {t(\"取消\")}\n            </Button>\n            <Button\n              className=\"button-shorted active\"\n              //variant=\"contained\"\n              onClick={() => onConfirm(selectedOption)}\n            >\n              {t(\"確認\")}\n            </Button>\n          </Box>\n        )}\n      </Box>\n    </Modal>\n  );\n}\n\nexport default BasicModal;\n","// src/components/CustomToast.tsx\nimport React from \"react\";\nimport { toast, ToastOptions } from \"react-hot-toast\";\n\ninterface CustomToastProps {\n  message: string;\n  type: \"success\" | \"error\" | \"loading\";\n}\n\nconst toastStyles: { [key: string]: React.CSSProperties } = {\n  success: {\n    backgroundColor: \"#f44336\", // Green background\n    color: \"#fff\",\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    marginTop: '50%'\n  },\n  error: {\n    backgroundColor: \"#f44336\", // Red background\n    color: \"#fff\",\n  },\n  loading: {\n    backgroundColor: \"#333\", // Dark background\n    color: \"#fff\",\n  },\n};\n\nexport const showCustomToast = (message: string, type: \"success\" | \"error\" | \"loading\") => {\n  return toast(message, {\n    style: toastStyles[type],\n    duration: type === \"loading\" ? undefined : 4000, // Keep loading toast until dismissed\n    position: \"top-center\",\n  });\n};","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport BackBar from \"../../../../components/BackBar\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport BasicModal from \"../../../../components/BasicModal\";\nimport Button from \"../../../../components/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport storageUtils from \"../../../../utils/storageUtils\";\nimport useUserStore from \"../../../../store/useUserStore\";\nimport { Option } from \"../../../../type/common\";\nimport { AppDispatch, RootState, store } from \"../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLanguage } from \"../../../../store/initSlice\";\nimport { logout } from \"../../../../store/userInfoSlice\";\nimport _ from \"lodash\";\nimport { getFontClass, isLogin } from \"../../../../utils/helper\";\nimport { showCustomToast } from \"../../../../components/CustomToast\";\n\ninterface MenuItem {\n  title: string;\n  link?: string;\n  modal?: string;\n}\n\nconst Setting: React.FC = () => {\n  const navigate = useNavigate();\n  const { t, i18n } = useTranslation();\n  const dispatch: AppDispatch = useDispatch();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [selectedOption, setSelectedOption] = useState<Option>({\n    id: \"zh_TW\",\n    name: \"繁體中文\",\n  });\n  const loading = useSelector((state: RootState) => state.userInfo.loading);\n  const language = useSelector((state: RootState) => state.init.language);\n\n  const languageMap: Record<string, string> = {\n    zh_TW: t(\"繁體中文\"),\n    zh_CN: t(\"簡體中文\"),\n    en: t(\"英文\"),\n    jp: t(\"日本語\"),\n  };\n  // Sync current language selection with i18n\n  useEffect(() => {\n    setSelectedOption({ id: i18n.language, name: languageMap[i18n.language] });\n  }, [i18n.language]);\n\n  const handleClick = (item: MenuItem) => {\n    if (item.link) {\n      navigate(item.link, { state: { barTitle: item.title } });\n    } else if (item.modal) {\n      setOpen(true);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const changeLanguage = (option: Option | null) => {\n    if (option) {\n      i18n.changeLanguage(option.id);\n      dispatch(setLanguage(option.id));\n      //storageUtils.saveLanguage(lang);\n    }\n  };\n\n  const isCooldown = useRef(false);\n  const handleLogout = () => {\n    if (isCooldown.current) return; // 如果正在冷卻中，阻止執行\n\n    isCooldown.current = true;\n    dispatch(logout())\n      .then((res) => {\n        //toast.dismiss(\"logout\");\n        if (logout.fulfilled.match(res)) {\n          showCustomToast(t(\"登出成功\"), \"error\");\n        } else if (logout.rejected.match(res)) {\n          showCustomToast(`${t(\"登出失敗:\")} ${res.payload || t(\"未知錯誤\")}`, \"error\");\n        }\n      });\n\n    // 設置冷卻時間\n    setTimeout(() => {\n      isCooldown.current = false;\n    }, 3000); // 3秒冷卻時間\n  };\n\n  const menuItems: MenuItem[] = [\n    { title: t(\"消費說明\"), link: \"/app/Member/Setting/Instructions\" },\n    { title: t(\"條款與條件\"), link: \"/app/Member/Setting/Conditions\" },\n    { title: t(\"隱私政策\"), link: \"/app/Member/Setting/Privacy\" },\n    { title: t(\"VPN教學\"), link: \"/app/Member/Setting/VPN\" },\n    { title: t(\"語系切換\"), modal: \"toggleModal\" },\n  ];\n\n  return (\n    <div className={`${getFontClass(`${language}_m`)} p-4`}>\n      <BackBar />\n      <List sx={{ width: \"100%\" }}>\n        {menuItems.map((item) => (\n          <ListItem\n            key={item.title}\n            disableGutters\n            onClick={() => handleClick(item)}\n            secondaryAction={\n              <IconButton aria-label=\"angle-right\">\n                <FontAwesomeIcon\n                  icon={faAngleRight}\n                  className=\"text-primary-active\"\n                />\n              </IconButton>\n            }\n          >\n            <ListItemText primary={item.title} />\n          </ListItem>\n        ))}\n      </List>\n      <BasicModal\n        title={t(\"請選擇語系\")}\n        options={Object.entries(languageMap).map(([key, value]) => ({\n          id: key,\n          name: value,\n        }))}\n        open={open}\n        currentState={selectedOption}\n        handleClose={handleClose}\n        setSelectedOption={changeLanguage}\n        //content={t(\"選擇您喜歡的語言\")}\n        onConfirm={() => setOpen(false)}\n        onCancel={handleClose}\n        showButtons={true}\n      />\n      {isLogin(store.getState()) && (\n        <Button className=\"button-full secondary mt-4\" onClick={handleLogout}>\n          {t(\"登出\")}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Setting;\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;"],"names":["modalStyle","position","top","left","transform","width","bgcolor","colors","background","border","borderRadius","boxShadow","p","color","primary","active","display","flexDirection","alignItems","justifyContent","_ref","options","open","currentState","handleClose","setSelectedOption","title","content","onConfirm","onCancel","showButtons","selectedOption","setSelectedOptionLocal","useState","t","useTranslation","useEffect","_jsx","Modal","sx","maxWidth","margin","onClose","children","_jsxs","Box","Typography","id","variant","component","fontSize","fontWeight","className","onClick","FontAwesomeIcon","icon","faTimes","mt","length","List","map","option","ListItem","handleOptionSelect","faCheck","name","Button","toastStyles","success","backgroundColor","paddingLeft","paddingRight","marginTop","error","loading","showCustomToast","message","type","toast","style","duration","undefined","Setting","navigate","useNavigate","i18n","dispatch","useDispatch","setOpen","language","useSelector","state","userInfo","init","languageMap","zh_TW","zh_CN","en","jp","isCooldown","useRef","menuItems","link","modal","getFontClass","BackBar","item","disableGutters","barTitle","handleClick","secondaryAction","IconButton","faAngleRight","ListItemText","BasicModal","Object","entries","key","value","changeLanguage","setLanguage","isLogin","store","getState","handleLogout","current","logout","then","res","fulfilled","match","rejected","payload","setTimeout","_excluded","ListItemTextRoot","styled","slot","overridesResolver","props","styles","ownerState","listItemTextClasses","secondary","root","inset","multiline","dense","_extends","flex","minWidth","marginBottom","React","inProps","ref","useDefaultProps","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","getListItemTextUtilityClass","useUtilityClasses","clsx"],"sourceRoot":""}