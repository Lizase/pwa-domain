{"version":3,"file":"static/js/2258.faacdf65.chunk.js","mappings":"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","sources":["components/CustomToast/index.tsx","components/TextInput/index.tsx","pages/ForgetPassword/index.tsx","../node_modules/@mui/icons-material/CheckCircle.js"],"sourcesContent":["// src/components/CustomToast.tsx\nimport React from \"react\";\nimport { toast, ToastOptions } from \"react-hot-toast\";\n\ninterface CustomToastProps {\n  message: string;\n  type: \"success\" | \"error\" | \"loading\";\n}\n\nconst toastStyles: { [key: string]: React.CSSProperties } = {\n  success: {\n    backgroundColor: \"#f44336\", // Green background\n    color: \"#fff\",\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    marginTop: '50%'\n  },\n  error: {\n    backgroundColor: \"#f44336\", // Red background\n    color: \"#fff\",\n  },\n  loading: {\n    backgroundColor: \"#333\", // Dark background\n    color: \"#fff\",\n  },\n};\n\nexport const showCustomToast = (message: string, type: \"success\" | \"error\" | \"loading\") => {\n  return toast(message, {\n    style: toastStyles[type],\n    duration: type === \"loading\" ? undefined : 4000, // Keep loading toast until dismissed\n    position: \"top-center\",\n  });\n};","import React from \"react\";\nimport { Input } from \"@mui/base/Input\";\n\ninterface TextInputProps {\n  value: string;\n  onInputChange: (value: any) => void;\n  placeholder?: string;\n  type?: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  rows?: number;\n  accept?: string;\n  autocomplete?: string;\n  hidden?: boolean;\n  authCode?: boolean;\n  rightIcon?: React.ReactNode; // 接受 rightIcon 作為一個可選的 React 元素\n  className?: string;\n}\n\nconst TextInput: React.FC<TextInputProps> = (props) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    if (props.type === \"file\") {\n      props.onInputChange((event.target as HTMLInputElement).files?.[0]);\n    } else {\n      props.onInputChange(event.target.value);\n    }\n  };\n  //w-full text-sm leading-5 px-3 py-2 rounded focus:shadow-lg border border-[#555555] bg-white text-black focus-visible:outline-0 min-h-10 ${props.className}\n  const commonProps = {\n    className:\n      `w-full text-sm px-3  min-h-10 text-black rounded border-2 border-[#555555] focus-visible:outline-0 ${props.className}`,\n    disabled: props.disabled,\n    value: props.value,\n    onChange: handleChange,\n    placeholder: props.placeholder,\n    autoComplete: props.autocomplete || \"off\",\n    hidden: props.hidden,\n    style: props.authCode\n      ? { borderTopRightRadius: 0, borderBottomRightRadius: 0 }\n      : undefined,\n  };\n\n  return (\n    <div className=\"relative flex items-center\">\n      {props.multiline ? (\n        <textarea {...commonProps} rows={props.rows || 1} />\n      ) : (\n        <input {...commonProps} type={props.type || \"text\"} accept={props.accept} />\n      )}\n      {props.rightIcon && (\n        <div className=\"absolute right-2\">\n          {props.rightIcon}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n","import { useState, useTransition } from \"react\";\n\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nimport TextInput from \"../../components/TextInput\";\nimport Button from \"../../components/Button\";\nimport AppBar from \"../../components/AppBar\";\nimport { forgetPassword } from \"../../store/userInfoSlice\";\nimport { AppDispatch, RootState } from \"../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showCustomToast } from \"../../components/CustomToast\";\nimport { useTranslation } from \"react-i18next\";\nimport { getFontClass } from \"../../utils/helper\";\n\ninterface ForgetPasswordProps {\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\nconst ForgetPassword: React.FC<ForgetPasswordProps> = ({ onSubmit }) => {\n  const {t} = useTranslation();\n  const dispatch:AppDispatch = useDispatch();\n  const [forgetValue, setForgetValue] = useState({ username: \"\", email: \"\" });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email: \"\",\n  });\n  const language = useSelector((state: RootState) => state.init.language);\n\n  const validateInputs = () => {\n    let isValid = true;\n    const newErrors = {\n      username: \"\",\n      email: \"\",\n    };\n\n    // 帳號驗證：6-10個英文數字\n    if (forgetValue.username !== forgetValue.username) {\n      newErrors.username = t(\"查無此帳號，請重新輸入\");\n      isValid = false;\n    }\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(forgetValue.email)) {\n      newErrors.email = t(\"查無此Email，請重新輸入\");\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async() => {\n    if (validateInputs()) {\n      try {\n        const result = await dispatch(forgetPassword(forgetValue));\n        showCustomToast(result.payload, 'error');\n      } catch (error) {\n        console.error(\"Error during password reset:\", error);\n        showCustomToast(\"Something went wrong!\", 'error');\n      }\n    } else {\n      showCustomToast(\"Please check your inputs.\", 'error');\n    }\n  };\n\n  return (\n    <div className={`${getFontClass(`${language}`)} p-4`}>\n      {isSubmitted ? (\n        <div>\n          <AppBar title={t(\"忘記密碼\")}/>\n          <div className=\"flex flex-col items-center justify-start space-y-4 pt-20 h-screen\">\n            <CheckCircleIcon className=\"text-red-500\" sx={{ fontSize: 70 }}/>\n            <p>{t('已寄送新密碼至會員Email信箱')}</p>\n            <Button className=\"button-full active mt-2\" type=\"submit\">\n              確定\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          <AppBar title={t(\"忘記密碼\")}/>\n          <div>\n            <label className=\"block mb-2\">{t('帳號')}</label>\n            <TextInput\n              placeholder={t(\"請輸入帳號\")}\n              value={forgetValue.username}\n              onInputChange={(value: any) =>\n                setForgetValue({ ...forgetValue, username: value })\n              }\n              autocomplete=\"username\"\n              className={errors.username !== '' ? \"border-red-500\" : \"\"}\n            />\n            {errors.username && <p className=\"text-red-500 text-xs\">{errors.username}</p>}\n          </div>\n          <div>\n            <label className=\"block mb-2\">{t('註冊時的Email')}</label>\n            <TextInput\n              placeholder={t(\"請輸入註冊時的Email\")}\n              value={forgetValue.email}\n              onInputChange={(value: any) =>\n                setForgetValue({ ...forgetValue, email: value })\n              }\n              className={errors.email !== '' ? \"border-red-500\" : \"\"}\n            />\n            {errors.email && <p className=\"text-red-500 text-xs\">{errors.email}</p>}\n          </div>\n          <Button className=\"button-full active mt-2\" onClick={handleSubmit}>\n            {t('提交')}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForgetPassword;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');"],"names":["toastStyles","success","backgroundColor","color","paddingLeft","paddingRight","marginTop","error","loading","showCustomToast","message","type","toast","style","duration","undefined","position","props","commonProps","className","disabled","value","onChange","event","_files","onInputChange","target","files","placeholder","autoComplete","autocomplete","hidden","authCode","borderTopRightRadius","borderBottomRightRadius","_jsxs","children","multiline","_jsx","rows","accept","rightIcon","_ref","onSubmit","t","useTranslation","dispatch","useDispatch","forgetValue","setForgetValue","useState","username","email","isSubmitted","setIsSubmitted","errors","setErrors","language","useSelector","state","init","getFontClass","AppBar","title","CheckCircleIcon","sx","fontSize","Button","TextInput","onClick","async","validateInputs","isValid","newErrors","test","result","forgetPassword","payload","console","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}