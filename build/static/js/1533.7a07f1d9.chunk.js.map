{"version":3,"file":"static/js/1533.7a07f1d9.chunk.js","mappings":"0LAcA,SAASA,EAAUC,GACjB,MAAO,CACLC,GAAI,cAAcD,IAClB,gBAAiB,mBAAmBA,IAExC,CAEA,MAgDA,EAhD8CE,IAAoC,IAAnC,KAAEC,EAAI,MAAEC,EAAK,aAAEC,GAAcH,GACzDI,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKC,WAC9D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHP,MAAOA,EACPQ,SAAUP,EACV,aAAW,qBACXQ,QAAQ,aACRC,cAAc,OACdC,kBAAmB,CACjBC,MAAO,CACLC,gBAAiBC,EAAAA,EAAOC,YAG5BC,GAAI,CACF,8BAA+B,CAC7BC,MAA2B,iBAApBlB,EAAKC,GAAOkB,IAAe,UAAY,SAEhD,uBAAwB,CACtBC,QAAS,OACTC,eAAgB,SAChBP,gBAAiB,cACjB,UAAW,CACTQ,MAAO,OACPR,gBAAiB,aAGrBS,SAEG,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAI,CAACC,EAAK5B,KACfU,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAAEC,MAAOF,EAAIE,SAAuB/B,EAAUC,GAChDoB,GAAI,CACFC,MAAmB,iBAAZO,EAAIN,IAAe,UAAYJ,EAAAA,EAAOa,QAAQC,SACrDC,SAAU,OACVC,WAAY,OACZC,SAAU,OACVV,MAAO,OACPW,YAAa,EACbC,aAAc,EACdC,cAAe,EACfC,YAAa,IAVYvC,MAc1B,ECxDLwC,EAAoCtC,IAA2C,IAA1C,SAAEwB,EAAQ,MAAEtB,EAAK,MAAEJ,KAAUyC,GAAOvC,EAC7E,OACEQ,EAAAA,EAAAA,KAAA,OACEgC,KAAK,WACLC,OAAQvC,IAAUJ,EAClBC,GAAI,mBAAmBD,IACvB,kBAAiB,cAAcA,OAC3ByC,EAAKf,SAERtB,IAAUJ,IAASU,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAAAlB,SAAEA,KACtB,EAIV,EAAemB,EAAAA,KAAWL,GCH1B,EAZgDtC,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EAC9D,OACEQ,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAApB,SACO,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAI,CAACC,EAAK5B,KACfU,EAAAA,EAAAA,KAAC8B,EAAQ,CAACpC,MAAOA,EAAOJ,MAAOA,EAAM0B,SAClCE,EAAImB,SADoC/C,MAI5C,ECJQ,SAASgD,EAAS9C,GAA2D,IAA1D,KAAEC,EAAI,aAAE8C,EAAe,EAAC,YAAEC,GAA6BhD,EACvF,MAAOE,EAAO+C,GAAYN,EAAAA,SAAeI,GAazC,OAJAJ,EAAAA,WAAgB,KACdM,EAASF,EAAa,GACrB,CAACA,KAGFG,EAAAA,EAAAA,MAACR,EAAAA,EAAG,CAACxB,GAAI,CAAEK,MAAO,QAASC,SAAA,EACzBhB,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAACxB,GAAI,CAAEiC,aAAc,EAAGC,YAAa,UAAWC,SAAU,GAAI7B,UAChEhB,EAAAA,EAAAA,KAAC8C,EAAU,CAACrD,KAAMA,EAAMC,MAAOA,EAAOC,aAdvBA,CAACoD,EAA6BC,KACjDP,EAASO,GACLR,GACFA,EAAYQ,EACd,OAYEhD,EAAAA,EAAAA,KAACiD,EAAW,CAACxD,KAAMA,EAAMC,MAAOA,MAGtC,C,wHCLA,MAgDMwD,EAAwC1D,IAAA,IAAC,MAAE4B,EAAK,MAAE1B,EAAK,SAAEK,GAAUP,EAAA,OACvEkD,EAAAA,EAAAA,MAAA,OAAKS,UACH,6BACgB,OAAbpD,EAAoB,QAAU,QAClCiB,SAAA,EACChB,EAAAA,EAAAA,KAAA,QAAMmD,UAAU,oBAAmBnC,SAAEI,KACrCpB,EAAAA,EAAAA,KAAA,QAAMmD,UAAU,8BAA6BnC,SAAEtB,MAC3C,EAGF0D,EAAkCC,IAOjC,IAPkC,KACvCC,EAAI,QACJC,EAAO,aACPC,EAAY,YACZC,EAAW,cACXC,EAAa,OACbC,GACDN,EACC,MAAM,EAAEO,IAAMC,EAAAA,EAAAA,MACR9D,GAAWH,EAAAA,EAAAA,KAAaC,GAAoBA,EAAMC,KAAKC,WAC7D,OACE2C,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yCAAwCnC,SAAA,EACrDhB,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,OAAMnC,SAAEsC,KACvBtD,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAO6D,EAASxD,SAAUA,KACxDC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAO8D,EAAczD,SAAUA,KAC7DC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAO+D,EAAa1D,SAAUA,KAC5DC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAOgE,EAAe3D,SAAUA,KAC9DC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAOiE,EAAQ5D,SAAUA,MACnD,EAIJ+D,EAA8BC,IAAoC,IAAnC,KAAET,EAAI,MAAEU,EAAK,KAAEC,EAAI,OAAEN,GAAQI,EAChE,MAAM,EAAEH,IAAMC,EAAAA,EAAAA,MACR9D,GAAWH,EAAAA,EAAAA,KAAaC,GAAoBA,EAAMC,KAAKC,WAC7D,OACE2C,EAAAA,EAAAA,MAAA,OAAKS,UAAU,yCAAwCnC,SAAA,EACrDhB,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,OAAMnC,SAAEsC,KACvBtD,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,wCAAWlE,MAAOsE,EAAOjE,SAAUA,KACxDC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAOuE,EAAMlE,SAAUA,KACrDC,EAAAA,EAAAA,KAACkD,EAAU,CAAC9B,MAAOwC,EAAE,4BAASlE,MAAO,GAAGiE,KAAUC,EAAE,YAAQ7D,SAAUA,MAClE,EASJmE,EAAWC,IAAoD,IAA/C,KAAEC,EAAI,cAAEC,GAAiCF,EAC7D,OACEnE,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,MAAKnC,SACjBoD,EAAKnD,KAAI,CAACqD,EAAMhF,KACfU,EAAAA,EAAAA,KAACqE,EAAa,IAAiBC,GAAXhF,MAElB,EA0EV,EAtE+BiF,KAC7B,MAAM,EAAEX,IAAMC,EAAAA,EAAAA,MACRW,GAAwBC,EAAAA,EAAAA,MACxBC,GAAiB9E,EAAAA,EAAAA,KAAaC,GAAqBA,EAAM8E,SAASD,iBAClEE,GAAehF,EAAAA,EAAAA,KAAaC,GAAqBA,EAAM8E,SAASE,oBAC/DC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAoB,KACrDC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAkB,KAEpDG,EAAAA,EAAAA,YAAU,KACJT,GAAkBU,MAAMC,QAAsB,OAAdX,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,cACpC,OAAdZ,QAAc,IAAdA,GAAAA,EAAgBY,WAAWC,SAAQ,CAACjB,EAAMhF,KACxC,MAAMkG,EAAclB,EAAKmB,iBAAiBC,QAAQ,WAAY,IACxDC,EAA0B,CAAC,CAC/BrC,KAAMgB,EAAKsB,WACXrC,QAASe,EAAKuB,SACdrC,aAAcgC,EACd/B,YAAaa,EAAKwB,mBAClBpC,cAAeY,EAAKyB,cACpBpC,OAAQqC,OAAO1B,EAAK2B,sBAER,IAAV3G,GACFyF,EAAgB,IAChBA,EAAgBY,IAEhBZ,GAAiBmB,GAAqB,IAAIA,KAAqBP,IACjE,IAEJ,GACC,CAACjB,KAEJS,EAAAA,EAAAA,YAAU,KACRgB,QAAQC,IAAI,iBAAkBxB,GAC1BA,GAAqD,kBAAlB,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcyB,cAA0D,QAAlB,OAAZzB,QAAY,IAAZA,OAAY,EAAZA,EAAcyB,cACjFC,OAAOC,QAAoB,OAAZ3B,QAAY,IAAZA,OAAY,EAAZA,EAAcyB,aAAad,SAAQ,CAAAiB,EAAelH,KAAW,IAAxBsB,EAAKlB,GAAM8G,EAC7D,MAAMC,EAAqB,CAAC,CAC1BzC,MAAOtE,EAAMgH,cACbzC,KAAMvE,EAAMiH,UACZhD,OAAkC,IAA1BqC,OAAOtG,EAAMkH,SAAiBZ,QAAQtG,EAAMkH,SAAWZ,QAAQtG,EAAMmH,SAC7EvD,KAAM5D,EAAMoH,WAGZ5B,EADY,IAAV5F,EACWmH,EAECM,GAAkB,IAAIA,KAAkBN,GACxD,GAEJ,GACC,CAAC7B,KAEJO,EAAAA,EAAAA,YAAU,KACRX,GAASwC,EAAAA,EAAAA,OACTxC,GAASyC,EAAAA,EAAAA,MAAoB,GAC5B,CAACzC,IAEJ,MAAM0C,EAAa,CACjB,CACEtG,IAAK,2BACLQ,MAAOwC,EAAE,4BACTvB,SAASrC,EAAAA,EAAAA,KAACkE,EAAQ,CAACE,KAAMU,EAAcT,cAAejB,KAExD,CACExC,IAAK,uCACLQ,MAAOwC,EAAE,wCACTvB,SAASrC,EAAAA,EAAAA,KAACkE,EAAQ,CAACE,KAAMa,EAAWZ,cAAeP,MAIvD,OAAO9D,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAAC7C,KAAMyH,GAAc,EC/LxC,EAT8BC,KAE1BzE,EAAAA,EAAAA,MAAA,OAAA1B,SAAA,EACEhB,EAAAA,EAAAA,KAACoH,EAAAA,EAAO,KACRpH,EAAAA,EAAAA,KAACqH,EAAU,M","sources":["components/BasicTabs/TabsHeader/index.tsx","components/BasicTabs/TabPanel/index.tsx","components/BasicTabs/TabsContent/index.tsx","components/BasicTabs/index.tsx","pages/Member/MyItems/MyPayRecord/TabContent.tsx","pages/Member/MyItems/MyPayRecord/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { colors } from \"../../../styles/colors\";\nimport { getFontClass } from \"../../../utils/helper\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store\";\n\ninterface TabsHeaderProps {\n  tabs: { key: string; label: string; content: React.ReactNode }[];\n  value: number;\n  handleChange: (event: React.SyntheticEvent, newValue: number) => void;\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TabsHeader: React.FC<TabsHeaderProps> = ({ tabs, value, handleChange }) => {\n  const language = useSelector((state: RootState) => state.init.language);\n  return (\n    <Tabs\n      value={value}\n      onChange={handleChange}\n      aria-label=\"basic tabs example\"\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      TabIndicatorProps={{\n        style: {\n          backgroundColor: colors.secondary,\n        },\n      }}\n      sx={{\n        \"& .MuiTab-root.Mui-selected\": {\n          color: tabs[value].key === \"獨家\" ? \"#02ff00\" : \"white\",\n        },\n        \"& .MuiTabs-indicator\": {\n          display: \"flex\",\n          justifyContent: \"center\",\n          backgroundColor: \"transparent\",\n          \"& > div\": {\n            width: \"100%\",\n            backgroundColor: \"#e8443d\",\n          },\n        },\n      }}\n    >\n      {tabs?.map((tab, index) => (\n        <Tab  label={tab.label} key={index} {...a11yProps(index)} \n          sx={{\n            color: tab.key === \"獨家\" ? \"#02ff00\" : colors.primary.inactive,\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            minWidth: \"auto\",\n            width: \"auto\",\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            marginRight: 4,\n          }}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default TabsHeader;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n};\n\nexport default React.memo(TabPanel);\n","import * as React from \"react\";\nimport TabPanel from \"../TabPanel\";\n\ninterface TabsContentProps {\n  tabs: { key: string; label: string; content: React.ReactNode }[];\n  value: number;\n}\n\nconst TabsContent: React.FC<TabsContentProps> = ({ tabs, value }) => {\n  return (\n    <>\n      {tabs?.map((tab, index) => (\n        <TabPanel value={value} index={index} key={index}>\n          {tab.content}\n        </TabPanel>\n      ))}\n    </>\n  );\n};\n\nexport default TabsContent;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TabsHeader from \"./TabsHeader\";\nimport TabsContent from \"./TabsContent\";\n\ninterface SharedTabsProps {\n  tabs: { key: string; label: string; content: React.ReactNode | null }[];\n  initialValue?: number;\n  className?: string;\n  setTabIndex?: (index:number) => void;\n}\n\nexport default function BasicTabs({ tabs, initialValue = 0, setTabIndex}: SharedTabsProps) {\n  const [value, setValue] = React.useState(initialValue);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n    if (setTabIndex) {\n      setTabIndex(newValue);\n    }\n  };\n\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue])\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\", paddingX: 2 }}>\n        <TabsHeader tabs={tabs} value={value} handleChange={handleChange}  />\n      </Box>\n      <TabsContent tabs={tabs} value={value} />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport BasicTabs from \"../../../../components/BasicTabs\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../../../store\";\nimport { fetchPaymentHistory, fetchPointHistory } from \"../../../../store/rechargeSlice\";\n\ninterface Expense {\n  orderID: string;\n  orderDetails: string;\n  orderStatus: string;\n  paymentMethod: string;\n  amount: number;\n  date: string;\n}\n\ninterface Point {\n  title: string;\n  mode: string;\n  amount: number;\n  date: string;\n}\n\ninterface DetailItemProps {\n  label: string;\n  value: string | number;\n  language: string;\n}\n\nconst expenses = (t: (key: string) => string): Expense[] => [\n  {\n    orderID: \"BC584AFBD25CC89C\",\n    orderDetails: t(\"1個月全館暢看\"),\n    orderStatus: t(\"購買成功\"),\n    paymentMethod: t(\"信用卡\"),\n    amount: 399,\n    date: \"2024-02-27 17:35:18\",\n  },\n  {\n    orderID: \"BC584AFBD25CB75EA2\",\n    orderDetails: t(\"1個月全館暢看\"),\n    orderStatus: t(\"購買成功\"),\n    paymentMethod: t(\"銀行轉帳\"),\n    amount: 399,\n    date: \"2024-02-27 17:35:18\",\n  },\n  {\n    orderID: \"BC584AFBDEA2\",\n    orderDetails: t(\"1個月全館暢看\"),\n    orderStatus: t(\"購買成功\"),\n    paymentMethod: t(\"信用卡\"),\n    amount: 399,\n    date: \"2024-02-27 17:35:18\",\n  },\n];\n\nconst points = (t: (key: string) => string): Point[] => [\n  {\n    title: t(\"深夜網吧 - 第 54話 第 54 話\"),\n    mode: t(\"線上觀看\"),\n    amount: -8,\n    date: \"2024-02-27 17:35:18\",\n  },\n  {\n    title: t(\"深夜網吧 - 第 54話 第 54 話\"),\n    mode: t(\"線上觀看\"),\n    amount: -8,\n    date: \"2024-02-27 17:35:18\",\n  },\n  {\n    title: t(\"線上觀看線上觀看線上觀看線上觀看線上觀看線上觀看\"),\n    mode: t(\"線上觀看\"),\n    amount: -8,\n    date: \"2024-02-27 17:35:18\",\n  },\n];\n\nconst DetailItem: React.FC<DetailItemProps> = ({ label, value, language }) => (\n  <div className={\n    `grid grid-cols-[80px_1fr]` +\n    `${language === \"en\" ? \" mb-2\" : \"mb-1\"}`\n  }>\n    <span className=\"whitespace-normal\">{label}</span>\n    <span className=\"break-all whitespace-normal\">{value}</span>\n  </div>\n);\n\nconst ExpensesItem: React.FC<Expense> = ({\n  date,\n  orderID,\n  orderDetails,\n  orderStatus,\n  paymentMethod,\n  amount,\n}) => {\n  const { t } = useTranslation();\n  const language = useSelector((state:RootState) => state.init.language);\n  return (\n    <div className=\"rounded p-4 bg-background mb-4 text-sm\">\n      <div className=\"mb-2\">{date}</div>\n      <DetailItem label={t(\"訂單編號\")} value={orderID} language={language}/>\n      <DetailItem label={t(\"訂單方案\")} value={orderDetails} language={language}/>\n      <DetailItem label={t(\"訂單狀態\")} value={orderStatus} language={language}/>\n      <DetailItem label={t(\"付款方式\")} value={paymentMethod} language={language}/>\n      <DetailItem label={t(\"消費金額\")} value={amount} language={language}/>\n    </div>\n  );\n};\n\nconst PointsItem: React.FC<Point> = ({ date, title, mode, amount }) => {\n  const { t } = useTranslation();\n  const language = useSelector((state:RootState) => state.init.language);\n  return (\n    <div className=\"rounded p-4 bg-background mb-4 text-sm\">\n      <div className=\"mb-2\">{date}</div>\n      <DetailItem label={t(\"點數使用作品\")} value={title} language={language} />\n      <DetailItem label={t(\"觀看方式\")} value={mode} language={language} />\n      <DetailItem label={t(\"點數使用\")} value={`${amount} ${t(\"點\")}`} language={language} />\n    </div>\n  );\n};\n\ninterface ItemListProps<T> {\n  data: T[];\n  ItemComponent: React.FC<T>;\n}\n\nconst ItemList = <T,>({ data, ItemComponent }: ItemListProps<T>) => {\n  return (\n    <div className=\"p-4\">\n      {data.map((item, index) => (\n        <ItemComponent key={index} {...item} />\n      ))}\n    </div>\n  );\n};\n\nconst TabComponent: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch: AppDispatch = useDispatch();\n  const paymentHistory = useSelector((state: RootState) => state.recharge.paymentHistory);\n  const pointHistory = useSelector((state: RootState) => state.recharge.pointHistoryData);\n  const [expensesList, setExpensesList] = useState<Expense[]>([]);\n  const [pointList, setPointList] = useState<Point[]>([]);\n\n  useEffect(() => {\n    if (paymentHistory && Array.isArray(paymentHistory?.pay_orders)) {\n      paymentHistory?.pay_orders.forEach((item, index) => {\n        const orderDetail = item.front_order_name.replace(/<[^>]*>/g, \"\");\n        const expensesItem: Expense[] = [{\n          date: item.order_date,\n          orderID: item.order_no,\n          orderDetails: orderDetail,\n          orderStatus: item.front_order_status,\n          paymentMethod: item.pay_type_name,\n          amount: Number(item.front_order_amount)\n        }]\n        if (index === 0) {\n          setExpensesList([]);\n          setExpensesList(expensesItem);\n        } else {\n          setExpensesList((prevExpensesList) => [...prevExpensesList, ...expensesItem]);\n        }\n      });\n    }\n  }, [paymentHistory]);\n\n  useEffect(() => {\n    console.log(\"pointHistory: \", pointHistory);\n    if (pointHistory && typeof pointHistory?.historyData === 'object' && pointHistory?.historyData !== null) {\n      Object.entries(pointHistory?.historyData).forEach(([key, value], index) => {\n        const PointItem: Point[] = [{\n          title: value.uph_annotate1,\n          mode: value.mvExpired,\n          amount: Number(value.point_b) !== 0 ? Number(-value.point_b) : Number(-value.point_a),\n          date: value.uph_date,\n        }]\n        if (index === 0) {\n          setPointList(PointItem);\n        } else {\n          setPointList((prevPointList) => [...prevPointList, ...PointItem]);\n        }\n      });\n    }\n  }, [pointHistory]);\n\n  useEffect(() => {\n    dispatch(fetchPaymentHistory());\n    dispatch(fetchPointHistory());\n  }, [dispatch]);\n\n  const tabContent = [\n    {\n      key: \"消費紀錄\",\n      label: t(\"消費紀錄\"),\n      content: <ItemList data={expensesList} ItemComponent={ExpensesItem} />,\n    },\n    {\n      key: \"點數使用紀錄\",\n      label: t(\"點數使用紀錄\"),\n      content: <ItemList data={pointList} ItemComponent={PointsItem} />,\n    },\n  ];\n\n  return <BasicTabs tabs={tabContent} />;\n};\n\nexport default TabComponent;\n","import React from \"react\";\nimport BackBar from \"../../../../components/BackBar\";\nimport TabContent from \"./TabContent\";\n\nconst MyPayRecord: React.FC = () => {\n  return (\n    <div>\n      <BackBar />\n      <TabContent />\n    </div>\n  );\n};\n\nexport default MyPayRecord;\n"],"names":["a11yProps","index","id","_ref","tabs","value","handleChange","useSelector","state","init","language","_jsx","Tabs","onChange","variant","scrollButtons","TabIndicatorProps","style","backgroundColor","colors","secondary","sx","color","key","display","justifyContent","width","children","map","tab","Tab","label","primary","inactive","fontSize","fontWeight","minWidth","paddingLeft","paddingRight","paddingBottom","marginRight","TabPanel","other","role","hidden","Box","React","_Fragment","content","BasicTabs","initialValue","setTabIndex","setValue","_jsxs","borderBottom","borderColor","paddingX","TabsHeader","event","newValue","TabsContent","DetailItem","className","ExpensesItem","_ref2","date","orderID","orderDetails","orderStatus","paymentMethod","amount","t","useTranslation","PointsItem","_ref3","title","mode","ItemList","_ref4","data","ItemComponent","item","TabComponent","dispatch","useDispatch","paymentHistory","recharge","pointHistory","pointHistoryData","expensesList","setExpensesList","useState","pointList","setPointList","useEffect","Array","isArray","pay_orders","forEach","orderDetail","front_order_name","replace","expensesItem","order_date","order_no","front_order_status","pay_type_name","Number","front_order_amount","prevExpensesList","console","log","historyData","Object","entries","_ref5","PointItem","uph_annotate1","mvExpired","point_b","point_a","uph_date","prevPointList","fetchPaymentHistory","fetchPointHistory","tabContent","MyPayRecord","BackBar","TabContent"],"sourceRoot":""}